// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop.Api.Data;

namespace Shop.Api.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Shop.Api.Data.Entities.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MainCategoriesId")
                        .HasColumnType("int");

                    b.Property<int?>("SubCategoriesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MainCategoriesId");

                    b.HasIndex("SubCategoriesId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Shop.Api.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MainCategoriesId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubCategoriesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MainCategoriesId");

                    b.HasIndex("SubCategoriesId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Shop.Api.Data.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MultimediaId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MultimediaId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Shop.Api.Data.Entities.MainCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("MainCategories");
                });

            modelBuilder.Entity("Shop.Api.Data.Entities.Multimedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Multimedia");
                });

            modelBuilder.Entity("Shop.Api.Data.Entities.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencySymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CurrentPromotionDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ean")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GrossPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsExclusive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPromoPrice")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinOrderQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("MultimediaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NewUntil")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OnlineFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OnlineFrom")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PricePerHundred")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductSlogan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<decimal>("ShippingCosts")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Size")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SizePerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockLevel")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Upc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesId");

                    b.HasIndex("MultimediaId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Shop.Api.Data.Entities.SubCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("Shop.Api.Data.Entities.Url", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Url");
                });

            modelBuilder.Entity("Shop.Api.Data.Entities.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MultimediaId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MultimediaId");

                    b.ToTable("Video");
                });

            modelBuilder.Entity("Shop.Api.Data.Entities.Categories", b =>
                {
                    b.HasOne("Shop.Api.Data.Entities.MainCategories", "MainCategories")
                        .WithMany()
                        .HasForeignKey("MainCategoriesId");

                    b.HasOne("Shop.Api.Data.Entities.SubCategories", "SubCategories")
                        .WithMany()
                        .HasForeignKey("SubCategoriesId");
                });

            modelBuilder.Entity("Shop.Api.Data.Entities.Category", b =>
                {
                    b.HasOne("Shop.Api.Data.Entities.MainCategories", null)
                        .WithMany("MainCategory")
                        .HasForeignKey("MainCategoriesId");

                    b.HasOne("Shop.Api.Data.Entities.SubCategories", null)
                        .WithMany("SubCategory")
                        .HasForeignKey("SubCategoriesId");
                });

            modelBuilder.Entity("Shop.Api.Data.Entities.Image", b =>
                {
                    b.HasOne("Shop.Api.Data.Entities.Multimedia", null)
                        .WithMany("Images")
                        .HasForeignKey("MultimediaId");
                });

            modelBuilder.Entity("Shop.Api.Data.Entities.Product", b =>
                {
                    b.HasOne("Shop.Api.Data.Entities.Categories", "Categories")
                        .WithMany()
                        .HasForeignKey("CategoriesId");

                    b.HasOne("Shop.Api.Data.Entities.Multimedia", "Multimedia")
                        .WithMany()
                        .HasForeignKey("MultimediaId");
                });

            modelBuilder.Entity("Shop.Api.Data.Entities.Url", b =>
                {
                    b.HasOne("Shop.Api.Data.Entities.Product", null)
                        .WithMany("Urls")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Shop.Api.Data.Entities.Video", b =>
                {
                    b.HasOne("Shop.Api.Data.Entities.Multimedia", null)
                        .WithMany("Videos")
                        .HasForeignKey("MultimediaId");
                });
#pragma warning restore 612, 618
        }
    }
}
